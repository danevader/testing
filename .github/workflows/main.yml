name: appium-android

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest # Use macOS for hardware acceleration (HAXM or ARM-based emulator)

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Set Up Java
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin

    # Step 3: Verify Java Version
    - name: Verify Java Version
      run: java -version

    # Step 4: Install Appium Server
    - name: Install Appium Server
      run: |
        npm install -g appium@1.20.2
        appium -v

    - name: Start Appium Server
      run: |
        nohup appium --log-level debug > appium-server.log 2>&1 &
        echo "Appium Server Initialized"
      shell: bash

    # Step 5: Start Emulator and Run Tests
    - name: Start Emulator and Run Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: google_apis
        arch: arm64-v8a
        profile: Nexus 6
        ram-size: 2048
        disk-size: 6G
        emulator-boot-timeout: 600
        emulator-options: "-no-snapshot -gpu swiftshader_indirect -no-boot-anim"
        cores: 2
        avd-name: test
        force-avd-creation: true
        script: |
          # Wait for emulator to boot
          adb wait-for-device
          for i in {1..30}; do
            BOOT_COMPLETED=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            if [ "$BOOT_COMPLETED" == "1" ]; then
              echo "Emulator is fully booted!"
              adb shell input keyevent 82 # Unlock screen
              break
            else
              echo "Waiting for emulator to boot... ($i/30)"
              sleep 10
            fi
          done
          if [ "$BOOT_COMPLETED" != "1" ]; then
            echo "Emulator failed to boot in time."
            exit 1
          fi
          
          # Run tests
          mvn clean test -Dtest=newUserFlow.java

    # Step 6: Debug Logs
    - name: Capture Logs
      run: |
        adb devices
        adb shell getprop > emulator-props.log
        adb logcat -d > emulator-logcat.log
        cat appium-server.log

    # Step 7: Upload Logs
    - name: Upload Logs
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: |
          appium-server.log
          emulator-logcat.log
          emulator-props.log

    # Step 8: Shut Down Emulator
    - name: Shutdown Emulator
      run: adb emu kill || pkill -f emulator
